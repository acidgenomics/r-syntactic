% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/snakeCase-methods.R
\docType{methods}
\name{snakeCase}
\alias{snakeCase}
\alias{snakeCase,atomic-method}
\alias{snakeCase,character-method}
\alias{snakeCase,factor-method}
\alias{snakeCase,list-method}
\alias{snakeCase,matrix-method}
\alias{snakeCase,data.frame-method}
\alias{snakeCase,Vector-method}
\alias{snakeCase,DataTable-method}
\alias{snakeCase,Ranges-method}
\alias{snakeCase,Matrix-method}
\alias{snakeCase,SummarizedExperiment-method}
\alias{snake}
\title{Snake case}
\usage{
snakeCase(object, ...)

\S4method{snakeCase}{atomic}(object, names = TRUE)

\S4method{snakeCase}{character}(object, names = TRUE)

\S4method{snakeCase}{factor}(object, names = TRUE)

\S4method{snakeCase}{list}(object, names = TRUE)

\S4method{snakeCase}{matrix}(object, rownames = FALSE, colnames = TRUE)

\S4method{snakeCase}{data.frame}(object, rownames = FALSE,
  colnames = TRUE)

\S4method{snakeCase}{Vector}(object, names = TRUE, mcols = TRUE,
  metadata = TRUE)

\S4method{snakeCase}{DataTable}(object, rownames = FALSE,
  colnames = TRUE, mcols = TRUE, metadata = TRUE)

\S4method{snakeCase}{Ranges}(object, names = FALSE, mcols = TRUE,
  metadata = TRUE)

\S4method{snakeCase}{Matrix}(object, rownames = FALSE, colnames = TRUE)

\S4method{snakeCase}{SummarizedExperiment}(object, rownames = FALSE,
  colnames = TRUE, assayNames = TRUE, rowData = TRUE,
  colData = TRUE, metadata = TRUE)

snake(...)
}
\arguments{
\item{object}{Object.}

\item{names}{\code{logical(1)}.
Sanitize names.}

\item{rownames}{\code{logical(1)}.
Apply sanitization on row names. This is not generally recommended by
default, since rownames commonly contain gene identifiers that should not
be modified.}

\item{colnames}{\code{logical(1)}.
Apply sanitization on column names. This is generally recommended by
default.}

\item{mcols}{\code{logical(1)}.
FIXME}

\item{metadata}{\code{logical(1)}.
FIXME}

\item{assayNames}{\code{logical(1)}.
FIXME}

\item{rowData}{\code{logical(1)}.
FIXME}

\item{colData}{\code{logical(1)}.
FIXME}

\item{...}{Additional arguments.}
}
\value{
Modified object, with names formatted in snake case.
}
\description{
Format character strings to use snake-style formatting, where word boundaries
are defined by underscores (e.g. \code{this_is_snake_case}).
}
\details{
Snake case is recommended by the tidyverse for variable and function names.
}
\examples{
data(syntactic, package = "acidtest")
lapply(syntactic, snakeCase)
}
