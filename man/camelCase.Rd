% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/camelCase-methods.R
\docType{methods}
\name{camelCase}
\alias{camelCase}
\alias{camelCase,character-method}
\alias{camel}
\title{Camel case}
\usage{
camelCase(object, ...)

\S4method{camelCase}{character}(object, names = TRUE, strict = FALSE,
  prefix = TRUE)

camel(...)
}
\arguments{
\item{object}{Object.}

\item{...}{Additional arguments.}

\item{names}{\code{logical(1)}.
Sanitize names.}

\item{strict}{\code{logical(1)}.
Enforce strict name sanitization. When \code{TRUE}, this does not allow the
return of any capitalized acronyms. "RNA" will become "Rna", for example.
Disabled by default.}

\item{prefix}{\code{logical(1)}.
Prepend "X" character if necessary, when string begins with a syntactically
invalid character, such as a number or non-alphanumeric. Note that names
are always made syntactically valid when applicable with "X" prefix.
See \code{\link[base:make.names]{make.names()}} for details. Recommended by default.}
}
\value{
Modified object.
Contains syntatically valid names. For objects supporting
\code{\link[base:names]{names()}}, the underlying data returns unchanged, except for
\code{character} or \code{vector} class.
}
\description{
Format character strings to use (lower) camel-style formatting, where word
boundaries are defined by capitlization only (e.g. \code{thisIsCamelCase}).
}
\details{
Camel case is recommended by Bioconductor for variable and function names.
}
\note{
Updated 2019-10-07.
}
\examples{
data(syntactic, package = "acidtest")
object <- syntactic$character
camelCase(object)
}
